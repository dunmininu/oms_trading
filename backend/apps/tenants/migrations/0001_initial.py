# Generated by Django 5.0.14 on 2025-08-10 13:43

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(db_index=True, max_length=100, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("display_name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("contact_email", models.EmailField(max_length=254)),
                ("contact_phone", models.CharField(blank=True, max_length=20)),
                ("website", models.URLField(blank=True)),
                ("address_line1", models.CharField(blank=True, max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                ("country", models.CharField(blank=True, max_length=100)),
                (
                    "business_type",
                    models.CharField(
                        choices=[
                            ("INDIVIDUAL", "Individual"),
                            ("PARTNERSHIP", "Partnership"),
                            ("LLC", "Limited Liability Company"),
                            ("CORPORATION", "Corporation"),
                            ("HEDGE_FUND", "Hedge Fund"),
                            ("FAMILY_OFFICE", "Family Office"),
                            ("PROP_TRADING", "Proprietary Trading"),
                            ("OTHER", "Other"),
                        ],
                        default="INDIVIDUAL",
                        max_length=50,
                    ),
                ),
                ("tax_id", models.CharField(blank=True, max_length=50)),
                ("registration_number", models.CharField(blank=True, max_length=100)),
                (
                    "default_currency",
                    models.CharField(
                        default="USD",
                        max_length=3,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Currency code must be 3 uppercase letters",
                                regex="^[A-Z]{3}$",
                            )
                        ],
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC",
                        help_text="Timezone for the tenant (e.g., America/New_York)",
                        max_length=50,
                    ),
                ),
                (
                    "subscription_plan",
                    models.CharField(
                        choices=[
                            ("FREE", "Free"),
                            ("BASIC", "Basic"),
                            ("PROFESSIONAL", "Professional"),
                            ("ENTERPRISE", "Enterprise"),
                        ],
                        default="FREE",
                        max_length=50,
                    ),
                ),
                ("max_users", models.PositiveIntegerField(default=1)),
                ("max_strategies", models.PositiveIntegerField(default=5)),
                ("max_orders_per_day", models.PositiveIntegerField(default=100)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("is_suspended", models.BooleanField(db_index=True, default=False)),
                ("suspension_reason", models.TextField(blank=True)),
                ("trial_ends_at", models.DateTimeField(blank=True, null=True)),
                ("subscription_ends_at", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "verbose_name": "tenant",
                "verbose_name_plural": "tenants",
                "db_table": "tenants_tenant",
                "indexes": [
                    models.Index(fields=["name"], name="tenants_ten_name_87437c_idx"),
                    models.Index(fields=["slug"], name="tenants_ten_slug_63daca_idx"),
                    models.Index(
                        fields=["is_active"], name="tenants_ten_is_acti_8f654a_idx"
                    ),
                    models.Index(
                        fields=["subscription_plan"],
                        name="tenants_ten_subscri_c53e48_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="tenants_ten_created_99c6ff_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TenantInvitation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("email", models.EmailField(db_index=True, max_length=254)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("OWNER", "Owner"),
                            ("ADMIN", "Administrator"),
                            ("TRADER", "Trader"),
                            ("VIEWER", "Viewer"),
                            ("ANALYST", "Analyst"),
                            ("RISK_MANAGER", "Risk Manager"),
                            ("COMPLIANCE", "Compliance Officer"),
                        ],
                        default="TRADER",
                        max_length=20,
                    ),
                ),
                (
                    "token",
                    models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                ),
                ("expires_at", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACCEPTED", "Accepted"),
                            ("DECLINED", "Declined"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                ("response_notes", models.TextField(blank=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                (
                    "invited_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "tenant invitation",
                "verbose_name_plural": "tenant invitations",
                "db_table": "tenants_tenant_invitation",
                "indexes": [
                    models.Index(
                        fields=["tenant", "email"],
                        name="tenants_ten_tenant__0a7618_idx",
                    ),
                    models.Index(fields=["token"], name="tenants_ten_token_f159f3_idx"),
                    models.Index(
                        fields=["status"], name="tenants_ten_status_04757b_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="tenants_ten_expires_f5892a_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TenantUser",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("OWNER", "Owner"),
                            ("ADMIN", "Administrator"),
                            ("TRADER", "Trader"),
                            ("VIEWER", "Viewer"),
                            ("ANALYST", "Analyst"),
                            ("RISK_MANAGER", "Risk Manager"),
                            ("COMPLIANCE", "Compliance Officer"),
                        ],
                        default="TRADER",
                        max_length=20,
                    ),
                ),
                ("can_trade", models.BooleanField(default=False)),
                ("can_manage_users", models.BooleanField(default=False)),
                ("can_manage_strategies", models.BooleanField(default=False)),
                ("can_view_reports", models.BooleanField(default=True)),
                ("can_manage_risk", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "notification_preferences",
                    models.JSONField(blank=True, default=dict),
                ),
                (
                    "invited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="invited_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_users",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "tenant user",
                "verbose_name_plural": "tenant users",
                "db_table": "tenants_tenant_user",
                "indexes": [
                    models.Index(
                        fields=["tenant", "user"], name="tenants_ten_tenant__3a455b_idx"
                    ),
                    models.Index(
                        fields=["tenant", "role"], name="tenants_ten_tenant__5c6e80_idx"
                    ),
                    models.Index(
                        fields=["user", "is_active"],
                        name="tenants_ten_user_id_d07440_idx",
                    ),
                    models.Index(
                        fields=["joined_at"], name="tenants_ten_joined__d6db4d_idx"
                    ),
                ],
                "unique_together": {("tenant", "user")},
            },
        ),
    ]
